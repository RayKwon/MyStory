@model MyStory.ViewModels.PostInput
@{
    ViewBag.Title = "Write";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@section Style{
    <link href="@Url.Content("~/Scripts/mdd_styles.css")" rel="stylesheet" type="text/css" />
    <link href="@Url.Content("~/Content/themes/base/jquery.ui.all.css")" rel="stylesheet" type="text/css" />
    <style>
        .ui-autocomplete-loading
        {
            background: white url('/Content/images/ui-anim_basic_16x16.gif') right center no-repeat;
        }
    </style>
}
<h2 class="page-header">
    Posting</h2>
@using (Html.BeginForm())
{
    @Html.ValidationSummary(true)
    <div>
        @Html.TextBoxFor(model => model.Title, new { @class = "input-xlarge", style = "width:100%", placeholder = "Title" })
        @Html.ValidationMessageFor(model => model.Title)
    </div>
    
    <div class="mdd_toolbar">
    </div>
    
    @Html.TextArea("Content", new { @class = "mdd_editor", rows = 15 })
    
    <div class="mdd_resizer">
    </div>
    
    @Html.ValidationMessageFor(model => model.Content)

    <div style="margin-top: 10px">
        @Html.TextBoxFor(model => model.Tags, new { style = "width:100%", @class = "input-xlarge", placeholder = "Tag" })
    </div>
    
    <div class="form-actions" align="center">
        <input type="submit" value="Save" class="btn btn-primary btn-large" />
        @Html.ActionLink("Cancel", "Index", "Home", null, new { @class = "btn btn-inverse btn-large" })
    </div>
        
    <div class="mdd_preview">
    </div>
}
@section Script
{
    <script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/MarkdownDeepLib.min.js")" type="text/javascript"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.8.18.js")" type="text/javascript"></script>
    <script type="text/javascript">
        $(function () {
            $('#new-post-nav').addClass('active');

            $("textarea.mdd_editor").MarkdownDeep({
                help_location: "/Scripts/mdd_help.htm",
                ExtraMode: true
            });

            function split(val) {
                return val.split(/,\s*/);
            }
            function extractLast(term) {
                return split(term).pop();
            }

            $("#Tags")
            // don't navigate away from the field on tab when selecting an item
			.bind("keydown", function (event) {
			    if (event.keyCode === $.ui.keyCode.TAB &&
						$(this).data("autocomplete").menu.active) {
			        event.preventDefault();
			    }
			})
			.autocomplete({
			    source: function (request, response) {
			        $.getJSON("/Tag/Search", {
			            term: extractLast(request.term)
			        }, response);
			    },
			    search: function () {
			        // custom minLength
			        var term = extractLast(this.value);
			        if (term.length < 1) {
			            return false;
			        }
			    },
			    focus: function () {
			        // prevent value inserted on focus
			        return false;
			    },
			    select: function (event, ui) {
			        var terms = split(this.value);
			        // remove the current input
			        terms.pop();
			        // add the selected item
			        terms.push(ui.item.value);
			        // add placeholder to get the comma-and-space at the end
			        terms.push("");
			        this.value = terms.join(", ");
			        return false;
			    }
			});
        })
    </script>
}
